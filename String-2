String:
-------

To represnt group of charaters

String is predefined class.

Using new keyword:
-------------------
String str = new String("sachin");


String Literal:
----------------
String str= "sachin";


package com.demo.variables;

public class App {

	public static void main(String[] args) {

		String str = new String("raj");
		System.out.println(str);
		
		boolean result1 =str.equals("sachin");
		System.out.println(result1);
		
		boolean result2 =str.equals("raj");
		System.out.println(result2);
		
		boolean result3 =str.equals("Raj");
		System.out.println(result3);


	}

}


package com.demo.variables;

public class App {

	public static void main(String[] args) {

		String str = new String("raj");
		System.out.println(str);
		
		boolean result1 =str.equalsIgnoreCase("sachin");
		System.out.println(result1);
		
		boolean result2 =str.equalsIgnoreCase("raj");
		System.out.println(result2);
		
		boolean result3 =str.equalsIgnoreCase("Raj");
		System.out.println(result3);


	}

}


package com.demo.variables;

public class App {

	public static void main(String[] args) {

		String str = new String("welcome to java");
		System.out.println(str);

		String split[] = str.split(" ");
		for (int i = 0; i < split.length; i++) {
			System.out.println(split[i]);
		}

		String str1 = new String("Raj Kumar");
		String names[] = str1.split(" ");
		System.out.println("First Name :" + names[0]);
	}

}


package com.demo.variables;

public class App {

	public static void main(String[] args) {

		String str = new String("rajkumar");
		System.out.println(str);
		
		//beginIndex - the beginning index, inclusive.
		String substring = str.substring(3);
		System.out.println(substring);
		
		//beginIndex - the beginning index, inclusive.
		//endIndex - the ending index, exclusive.
		String substring2 = str.substring(0, 3);
		System.out.println(substring2);

		
	}

}


package com.demo.variables;

public class App {

	public static void main(String[] args) {

		String str = new String(" raj kumar ");
		System.out.println(str);
		// Returns a string whose value is this string, with any leading and
		// whitespace removed.
		String trim = str.trim();
		System.out.println(trim);

	}


}

package com.demo.variables;

public class App {

	public static void main(String[] args) {

		// Primitve Type
		int i = 19;

		String valueOf = String.valueOf(i);
		System.out.println(valueOf);

	}

}


package com.demo.variables;

public class App {

	public static void main(String[] args) {

		// Primitve Type
	    boolean result = true;

	    //Returns the string representation of the primitive argument.
		String valueOf = String.valueOf(result);
		System.out.println(valueOf);
		
		boolean equals = valueOf.equals("true");
		System.out.println(equals);
		
		

	}

}


Parsing Technique:
-----------------

It is used to convert String tp primitive.

package com.demo.variables;

public class App {

	public static void main(String[] args) {

		String str = "19";
		int parseInt = Integer.parseInt(str);
		System.out.println(parseInt);

		double parseDouble = Double.parseDouble("10.5");
		System.out.println(parseDouble);

	}

}

package com.demo.variables;

public class App {

	public static void main(String[] args) {

		String str = "raj";
		int parseInt = Integer.parseInt(str);
		System.out.println(parseInt);



	}

}


Exception in thread "main" java.lang.NumberFormatException: For input string: "raj"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.demo.variables.App.main(App.java:8)



